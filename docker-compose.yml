version: '2.1'

services:
  postgres:
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    image: 'postgres:9'
    ports:
      - '5432:5432'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: 'redis:3.2-alpine'
    command: redis-server
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/data'

  sidekiq:
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    build: .
    entrypoint: scripts/docker-entrypoint-sidekiq.sh
    volumes:
      - '.:/app'
    environment:
      DB_HOST: postgres
      DB_USER: app_user
      DB_PASSWORD: app_password
      REDIS_URL: redis://redis:6379/0
      RAILS_LOG_TO_STDOUT: 1
    env_file:
      - '.env'

  website:
    depends_on:
      sidekiq:
        condition: service_started
    build: .
    entrypoint: scripts/docker-entrypoint-web-dev.sh
    ports:
      - '3000:3000'
    volumes:
      - '.:/app'
      - node_modules:/app/node_modules
    environment:
      DB_HOST: postgres
      DB_USER: app_user
      DB_PASSWORD: app_password
      REDIS_URL: redis://redis:6379/0
      RAILS_LOG_TO_STDOUT: 1
    env_file:
      - '.env'

volumes:
  redis:
  postgres:
  node_modules:
